<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
     <comment>
                                 代码生成器配置文件: 
          1.会为所有的property生成property_dir属性,如pkg=com.company => pkg_dir=com/company
          2.可以引用环境变量: ${env.JAVA_HOME} or System.properties: ${user.home},property之间也可以相互引用

          使用：
          1.文件包路径写成你项目的路径
          2.默认生成到本地 d:/temp 中
          3.生成后将 mybatis 下的包粘到项目中即可
          4.手动引入一下依赖即可完成
         git remote add origin url
     </comment>
    <!--生成文件包路径-->
     <entry key="basepackage">com.enn.mi.data</entry>
     <!-- jsp namespace: web/${namespace}/${className}/list.jsp -->
     <entry key="namespace">pages</entry>
    <!--生成到本地地址-->
     <entry key="outRoot">d:/temp</entry>
     
     
     <!-- 需要移除的表名前缀,使用逗号进行分隔多个前缀,示例值: t_,v_ -->
     <entry key="tableRemovePrefixes"/>
     
     <entry key="jdbc_username">mi</entry>
     <entry key="jdbc_password">mi</entry>

     <entry key="jdbc_url">jdbc:mysql://10.39.0.242:3306/mi-data?useUnicode=true&amp;characterEncoding=utf-8</entry>
     <entry key="jdbc_driver">com.mysql.jdbc.Driver</entry>
     
     
     <!-- oracle需要指定jdbc.schema,其它数据库忽略此项配置  -->
     <!-- <entry key="jdbc.schema"/> -->
     <!-- <entry key="jdbc.catalog"/> -->
     
    <!-- 数据库类型映射  -->
	<entry key="java_typemapping.java.sql.Timestamp">java.util.Date</entry>
	<entry key="java_typemapping.java.sql.Date">java.util.Date</entry>
	<entry key="java_typemapping.java.sql.Time">java.util.Date</entry>	
	<entry key="java_typemapping.java.lang.Byte">Integer</entry>
	<entry key="java_typemapping.java.lang.Short">Integer</entry>
	<entry key="java_typemapping.java.lang.Integer">Integer</entry>
	<entry key="java_typemapping.java.lang.String">String</entry>
	<entry key="java_typemapping.java.sql.Clob">String</entry>
	<entry key="java_typemapping.java.math.BigDecimal">java.math.BigDecimal</entry>
     
     
     <!-- H2 
     <entry key="jdbc.url">jdbc:h2:tcp://localhost/test</entry>
     <entry key="jdbc.driver">org.h2.Driver</entry>
     -->
     <!-- Oracle      jdbc:oracle:oci:@tnsname_devdb
     <entry key="jdbc.url">jdbc:oracle:thin:@192.168.0.177:1521:[sid]</entry>
     <entry key="jdbc.driver">oracle.jdbc.driver.OracleDriver</entry>
     -->
     <!-- SQLServer2000 
     <entry key="jdbc.url">jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=[database]</entry>
     <entry key="jdbc.driver">com.microsoft.jdbc.sqlserver.SQLServerDriver</entry>
     -->
     <!-- SQLServer2005 
     <entry key="jdbc.url">jdbc:sqlserver://192.168.0.98:1433;DatabaseName=[database]</entry>
     <entry key="jdbc.driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</entry>
     -->
     <!-- JTDs for SQLServer 
     <entry key="jdbc.url">jdbc:jtds:sqlserver://192.168.0.102:1433/[database];tds=8.0;lastupdatecount=true</entry>
     <entry key="jdbc.driver">net.sourceforge.jtds.jdbc.Driver</entry>
     -->
     <!-- PostgreSql
     <entry key="jdbc.url">jdbc:postgresql://localhost/[database]</entry>
     <entry key="jdbc.driver">org.postgresql.Driver</entry>
     -->
     <!-- Sybase
     <entry key="jdbc.url">jdbc:sybase:Tds:localhost:5007/[database]</entry>
     <entry key="jdbc.driver">com.sybase.jdbc.SybDriver</entry>
     -->
     <!-- DB2 
     <entry key="jdbc.url">jdbc:db2://localhost:5000/[database]</entry>
     <entry key="jdbc.driver">com.ibm.db2.jdbc.app.DB2Driver</entry>
     -->
     <!-- HsqlDB 
     <entry key="jdbc.url">jdbc:hsqldb:mem:generatorDB</entry>
     <entry key="jdbc.driver">org.hsqldb.jdbcDriver</entry>
     -->
     <!-- Derby 
     <entry key="jdbc.url">jdbc:derby://localhost/databaseName</entry>
     <entry key="jdbc.driver">org.apache.derby.jdbc.ClientDriver</entry>     
     -->
</properties>